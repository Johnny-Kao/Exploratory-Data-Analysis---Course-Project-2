str(mgp)
library(datasets)
str(mgp)
library(mpg)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("points", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("points", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
td <- data.frame(x = 1:100, y = rnorm(100))
td[50,2] <- 100
td
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big
| Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
vi
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local = TRUE)
pathtofile("plot1.R", local = "TRUE")
skip()
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamond)
str)diamond_
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
swirl(0)
colors()
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(seq(0,1,len =6))
p1(6)
0xcc
p2 <- palette(c("red", "yellow"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
p1(20)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <0 colorRampPalette(c("blue","green"), alpha=.5)
p3 <- colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,alpha=0.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
cols
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
volcano(pal(2))
volcano(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
swirl()
str(mpg)
xyplot(displ, hwy, data = mgp)
xyplot(displ ~ hwy, data = mgp)
xyplot(displ ~ hwy, data = mpg)
qplot(displ, hwy, data =mpg)
qplot(displ, hwy, data =mpg, aes .~drv)
qplot(displ, hwy, data =mpg, aes =.~drv)
qplot(displ, hwy, data =mpg, color = drv)
qplot(displ, hwy, data =mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data =mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = c("boxplot"))
qplot(drv, hwy, data = mpg, geom = ("boxplot")
)
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", col = manufacturer)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy, data = mpg, aes = drv)
qplot(hwy, data = mpg, aes = dvr)
qplot(hwy, data = mpg, aes = "drv")
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data=mpg, facets =  .~ drv)
qplot(hwy, data=mpg, facets =  drv ~ . ., binwidth =2)
qplot(hwy, data=mpg, facets =  drv ~ . , binwidth =2)
swirl()
swirl()
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~ drv)
ggplot2(mpg, aes = c("displ", "hwy"))
ggplot(mpg, aes = c("displ", "hwy"))
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
print(g)
g+geom_point()\
g+geom_point()
geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm") + q
qplot( formual  = . ~ drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
library(xlsx)
library(dplyr)
library(stringr)
library(lubridate)
# Loading data
resource <- "/Users/Johnny/Downloads/Forex_History/report_31176425bb7613f5b4eb_1.xls" ## You can change to your path
df <- read.xlsx2(resource, 1, stringsAsFactor= TRUE)
df <- data.frame(df)
# Order by time
df <- df[order(df$Time),]
# Change data format
df$Profit <- as.numeric(levels(df$Profit))[df$Profit]
df$Type <- as.character(df$Type)
# Remove informal expression
df$Type <- gsub("^balance","", df$Type) ## Omit original balance record
df$Type <- gsub("limit ","", df$Type) ## Omit limit orders
# Deal with raw data
tmp <- str_split_fixed(df$Type," ",3)
Type_split <- data.frame(tmp[,1:3])
colnames(Type_split) <- c("Buy_Sell", "Amount", "Pairs") ## Split Type to three col
df <- cbind(df, Type_split)
df <- df[,c(1,2,11,12,4,5,13,8,6,7)]
df <- df[2:nrow(df),]
df$Time <- ymd_hms(df$Time)
# Raw data to result
df <- df %>% group_by(Year = year(df$Time), Month = month(df$Time), Pair = df$Pairs) %>% summarize(Mean=mean(Profit, na.rm = TRUE), Max = max(Profit),Min = min(Profit), Count = sum(!Buy_Sell == ""), Sum = sum(Profit))
df <- cbind(df, YM = paste(df$Year, df$Month, sep = "_"))
result <- df[df$Pair !="",]
df
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls" ## You can change to your path
df <- read.xlsx2(resource, 1, stringsAsFactor= TRUE)
df <- data.frame(df)
df
df <- read.xlsx2(resource, 1, stringsAsFactor= TRUE)
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls" ## You can change to your path
df <- read.xls(resource, 1, stringsAsFactor= TRUE)
install.packages("read.xls")
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls" ## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls" ## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
df <- read.xlsx2(resource, 1, stringsAsFactor= TRUE)
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource
read.csv(resource)
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
library(xlsx)
library(dplyr)
library(stringr)
library(lubridate)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
install.packages("openxlsx")
library(openxlsx)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1)
library(xlsx)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
library(readxl)
install.packages("readxl")
library(readxl)
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xls"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
df <- read_excel(resource, sheet = 1)
# Loading data
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xlsx"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
library(xlsx)
library(dplyr)
library(stringr)
library(lubridate)
# Loading data
resource <- "/Users/Johnny/Downloads/Forex_History/report_20181005.xlsx"
## You can change to your path
df <- read.xlsx(resource, 1, stringsAsFactor= TRUE)
set.seed(2131)
set.seed(1234)
par(mar=(0,0,0,0))
par(mar=(0,0,0,0))
x <- rnorm(12,mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each=4), sd = 0.2)
x
y
plot(x,y col = "blue", pch =19,cex=2)
plot(x,yï¼Œ col = "blue", pch =19,cex=2)
plot(x,y,col = "blue", pch =19,cex=2)
text(x +0.05,y +0.05, labels = as.character(1:12))
df <- data.frame(x=x, y=y)
dist(df)
df1 <- dist(df)
hcc <- hclust(df1)
plot(hcc)
df
heatmap(df)
str(df)
as.numeric(df$x)
a <-as.numeric(df$x)
str(a)
df
set.seed(143)
df11 <- as.matrix(df)[sample(1:12),]
heatmap(df11)
library(swirl)
swirl()
library(swirl)
swirl()
main()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc), h = 1.5, col = "blue")
abline(h=1.5,col="blue")
plot(as.dendrogram(hc))
plot(as.dendrogram(hc), h = 1.5, col = "blue")
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
12
abline(h=.05,col="red")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,mean(distTmp),which.min)
apply(distTmp,2,which.min)
points(x,y,pch=19,cet=2,col=cols1)
points(x,y,pch=19,cet=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8.cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,ceters =3)
kmeans(dataFrame,centers  =3)
kmObj$iter
plots(x,y,col=kmObj$cluster,pch=19,cex=2)
points(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("block","red","green"),pch=3 ,cex= 3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3 ,cex= 3,lwd=3)
kmeans(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
kmeans(x,y,kmeans(dataFrame,6)$cluster,pch=19,cex=2)
skip()
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd()
svd2
svd2$v[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*%svd1$d[1]
skiP()
skip()
myImage(a1)
a2 <- svd1$u[,1] %*% t(svd1$v[,2]) * svd1$d[1]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)
names(ssd[562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
sub1 <- subset(ssd, 1)
sub1 <- subset(ssd$subject == 1)
sub1 <- subset(ssd$subject == 1, 1)
?subset
sub1 <- subset(ssd, ssd$subject == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe()
showMe(sub1[,1:6])
showMe(1:6)
dist(x[,1:3])
dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdish)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering M- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=2 unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1,6)
kClust <- kmeans(sub1[,1:2],6)
kClust <- kmeans(sub1[, -c(562, 563)]
)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity)
de
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, kmeans)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(x$y)
d
hist()
hist(sub1)
hist(1)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluter")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1,)
names(sub1)
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
library(swirl)
swilr()
swirl()
dim(pm0)
head(pm0)
names
print(cnames)
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(pm1$Date), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
plot(dates[negative],"Month")
plot(dates[negative],"month")
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <_ subset(pm0, %in%.)
skip()
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(cnt0, cnt0$county.site,nrow)
sapply(cnt0, cnt0$county.site,nrow)
apply(split(cnt0, cnt0$county.site), nrow)
apply(split(cnt0, cnt0$county.site), nrow)
skip()
sapply(split(cnt1, cnt1$county.site), nrow)
pm0$sub <- subset(cnt0, County.Code == 63 | Site.ID ==2008)
pm0$sub <- subset(cnt0, County.Code == 63 | Site.ID ==2008)
pm0sub <- subset(cnt0, County.Code == 63 | Site.ID ==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub), lwd=2, na.rm = T)
abline(median(x0sub, na.rm = T), lwd=2)
abline(median(x0sub, na.rm = TRUE), lwd=2)
abline(median(x0sub, na.rm = TRUE), lwd=2)
abline(hwd = median(x0sub, na.rm = TRUE), lwd=2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm =T)
rng <- range(x0sub, x1sub, na.rm =TRUE)
RNG
rng
mn0 <-
)
skip()
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0),mean(mn0))
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1, "state")
dim(mrg)
head(mrg)
plot(rep(1,52), mrg[,2],xlim = c(.5,2.5))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 4], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 3], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(xxx,,x,x,x)
skip()
mrg[mrg$mean.x < mrg$mean.y, ]
dir()
wd()
setwd
dir()
wd
dirwd
setwd("/Users/Johnny/Downloads/project2")
dir()
